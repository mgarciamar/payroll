{
	"info": {
		"_postman_id": "c5851d2d-ff2f-4ea2-8069-361c5a52859d",
		"name": "payroll",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Employee list",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/employees",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees"
					]
				}
			},
			"response": []
		},
		{
			"name": "One employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check employee id\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(1);\r",
							"});\r",
							"\r",
							"pm.test(\"Check employee name\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Bilbo Baggins\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check employee role\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.role).to.eql(\"burglar\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check employee data\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.eql(\r",
							"    {\r",
							"    \"id\": 1,\r",
							"    \"firstName\": \"Bilbo\",\r",
							"    \"lastName\": \"Baggins\",\r",
							"    \"role\": \"burglar\",\r",
							"    \"name\": \"Bilbo Baggins\",\r",
							"    \"_links\": {\r",
							"        \"self\": {\r",
							"            \"href\": \"http://localhost:8080/employees/1\"\r",
							"        },\r",
							"        \"employees\": {\r",
							"            \"href\": \"http://localhost:8080/employees\"\r",
							"        }\r",
							"    }\r",
							"});\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/employees/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "employee dont exists",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "update employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstName\": \"monica\",\r\n  \"lastName\": \"garcia\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/employees/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check employee POST\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.contains (\r",
							"{\r",
							"    \"id\": 9,\r",
							"    \"firstName\": \"Monica\",\r",
							"    \"lastName\": \"Garcia\",\r",
							"    \"role\": \"Alumna\",\r",
							"    \"name\": \"Monica Garcia\",\r",
							"    \"_links\": {\r",
							"        \"self\": {\r",
							"            \"href\": \"http://localhost:8080/employees/9\"\r",
							"        },\r",
							"        \"employees\": {\r",
							"            \"href\": \"http://localhost:8080/employees\"\r",
							"        }\r",
							"    }\r",
							"}\r",
							"\r",
							");\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});\r",
							"\r",
							"pm.test(\"Check employee id>2\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.greaterThan(20);\r",
							"    //pm.expect(jsonData.id).to.above(20);\r",
							"});\r",
							"\r",
							"pm.test(\"Check caracteres raros\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.firstName).to.contain(\"&\",\"@\");\r",
							"\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstName\": \"&$%$%$%\",\r\n  \"lastName\": \"Garcia\",\r\n  \"role\": \"Alumna\"\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/employees/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Add Employee vac√≠o",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check employee POST role null\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.contains (\r",
							"        {\r",
							"        \"role\": null\r",
							"        }\r",
							"    );\r",
							"});\r",
							"\r",
							"pm.test(\"Check employee POST firstname null\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.contains (\r",
							"        {\r",
							"        \"firstName\": null\r",
							"        }\r",
							"    );\r",
							"});\r",
							"\r",
							"pm.test(\"Check employee POST lastname null\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.contains (\r",
							"        {\r",
							"        \"lastName\": null\r",
							"        }\r",
							"    );\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"firstName\": \"&$%$%$%\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/employees/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "delete employee",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/employees/11",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						"11"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete employee not exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 500.Employee nos found\", function () {\r",
							"    pm.response.to.have.status(500);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/employees/11",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						"11"
					]
				}
			},
			"response": []
		}
	]
}